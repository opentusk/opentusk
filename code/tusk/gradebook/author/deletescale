<%doc>
 Copyright 2012 Tufts University 

 Licensed under the Educational Community License, Version 1.0 (the "License"); 
 you may not use this file except in compliance with the License. 
 You may obtain a copy of the License at 

 http://www.opensource.org/licenses/ecl1.php 

 Unless required by applicable law or agreed to in writing, software 
 distributed under the License is distributed on an "AS IS" BASIS, 
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 See the License for the specific language governing permissions and 
 limitations under the License.
</%doc>

<%once>
	use TUSK::GradeBook::GradeScale;
	use TUSK::GradeBook::GradeScaleBounds;
	use TUSK::GradeBook::GradeScaleCourse;
	use TUSK::GradeBook::GradeEventGradeScale;
 	use TUSK::Functions;
</%once>

<%attr>
	show_timeperiod_dropdown => 1
</%attr>

<%shared>
	my $grade_scale_id ;
	my $grade_scale; 
	my $scale_array=[];

	my $type_path = $m->comp("/tmpl/url:get_type_path");
	my $type_object = $m->comp("/tmpl/url:get_type_object");

	my $course_id = $type_object->primary_key;
	my $school_id = TUSK::Core::School->new()->getSchoolID($m->comp("/tmpl/url:get_school"));
	my $time_period = $m->comp("SELF:get_timeperiod_id");

	$grade_scale_id = $m->comp("/tmpl/url:get_last_path_id");
	if(defined($grade_scale_id)) {
		$grade_scale = TUSK::GradeBook::GradeScale->lookupKey($grade_scale_id);
	}
	
</%shared>

<%method startup>
%	$m->comp("SELF:set_msg", msg => __("Are you sure you want to delete this scale?"), type => 'hintmsg');
</%method>

<& /tmpl/element:form, params => {
				method => 'POST',
				onsubmit =>'return event_submit(this)',
				name => 'coursePreferences' } &>

<br>

<%perl>

if (defined($grade_scale_id) && scalar(@$link_scale_events) > 0 ) {

$m->comp("/gradebook/author/tmpl/scales:show_linked_events", type_path=>$type_path,link_scale_events=>$link_scale_events,school=>$school_id );

} ### if defined grade_scale_id and this scale is linked to events

</%perl>

<table cellspacing="4" >

<tr><td></td>
<td>
<table><tr><td>

<%perl>

	my $name_value = (defined($grade_scale_id)) ? $grade_scale->getName() : "";
	print "<b>Scale Name:</b> <input type='text' name='scale_name' value='$name_value' disabled></td></tr>";
	
	$m->comp('/tmpl/element:sort_order_box', params =>{
		no_add_button=>1,
        label=>'Custom Scale',
		no_label=>1,
		layer_info => {
			layer => 'newscalediv',
			context_path => $m->comp("/tmpl/url:get_full_path"),
			fields => ['grade', 'number','course_id','time_period','school_id'],
			name => 'new scale',
			sort => {usage => 'No'},
			action => {usage => 'No'},
			scrollrows => 10,
			display => [
				{label=>__('Minimum Score'), field=>'number', align=>'center', length=>50,type=>'label'},
				{label=>__('Grade'),field=>'grade', align=>'center', length=>50, type=>'label'}
			],
			validate => { usage => 'No', form => 'coursePreferences'},
			data => $scale_array }	});

	print "</table></td>";

</%perl>

</td></tr>

<tr id="cgs-tr" style="cursor:pointer" onclick="cl('cgs')">
</tr>

</table>
% if (scalar(@$link_scale_events) == 0) {
<table>
<& /tmpl/element:save_button, params=>{
        label=>'Delete Scale',
        cancel_onclick=>"go_back('" . $m->comp("/tmpl/url:construct_url", 'base_url' => "/gradebook/author/showscales") . "');",
        name=>'save_changes'} &>
</table>
% } else {

<br>
<span style="color:red;"><b><%__('WARNING')%>: </b></span><div><b><%__('You cannot delete a Grade Scale that is still linked to a Grade Event. Modify the Grade Events above to unlink the scale before deleting')%>.</b></div>
<br>
%my $back_url = "/gradebook/author/showscales/".$type_path;
<input type="reset" style="" value="Back to Grade Scales" id="cancel" name="cancel" onclick="window.location='<%$back_url%>';" class="formbutton"/>
% }

</form>


<%init>

my $link_scale_events;

### setup the scale_array for the sort_order_box
if(defined($grade_scale_id)) {

	$link_scale_events = TUSK::GradeBook::GradeEventGradeScale->lookup("grade_scale_id = $grade_scale_id");

	my $bounds = TUSK::GradeBook::GradeScaleBounds->lookup("grade_scale_id = $grade_scale_id order by lower_bound desc");
	foreach my $lnk (@$bounds){
		my $scale_hash;
    	$scale_hash->{'grade'} = $lnk->getGradeSymbol();
		$scale_hash->{'number'} = $lnk->getLowerBound();
		push(@$scale_array,$scale_hash);
	}

}

if ( defined( $ARGS{'submit_check'} )  ) 
{	
    
	if( defined($ARGS{'save_changes'})){

			### delete bounds
			my $old_bounds = TUSK::GradeBook::GradeScaleBounds->lookup("grade_scale_id =  $grade_scale_id");
			foreach my $bound (@$old_bounds) {
				$bound->delete();
			}

			### delete link to course
			my $link_scale_course = TUSK::GradeBook::GradeScaleCourse->lookupReturnOne("grade_scale_id = $grade_scale_id and course_id = $course_id");
			$link_scale_course->delete();

			### delete link to grade_events
			my $link_scale_events = TUSK::GradeBook::GradeEventGradeScale->lookup("grade_scale_id = $grade_scale_id");
			foreach my $link (@$link_scale_events) {
				$link->delete();
			}		

			### finally delete the grade_scale itself
			$grade_scale->delete();
	
	}
     
 	my $reload_url = "/gradebook/author/showscales/".$type_path;
    my $msgtxt = __("Scale successfully deleted");
    $m->comp("/tmpl/wizard:do_next", args => \%ARGS, default_transition => $reload_url . "?msg=$msgtxt");
}

	
</%init>

<%method jsarray>
% 	return ['layers.js', 'element.js', 'grade/gradebook.js'];
</%method>

<%method title>
%	return __("Delete Grade Scale");
</%method>

<%method red_header_text>
% 	return $m->comp('SELF:title');
</%method>
