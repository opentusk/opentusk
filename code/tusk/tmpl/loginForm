<%doc>
 Copyright 2012 Tufts University 

 Licensed under the Educational Community License, Version 1.0 (the "License"); 
 you may not use this file except in compliance with the License. 
 You may obtain a copy of the License at 

 http://www.opensource.org/licenses/ecl1.php 

 Unless required by applicable law or agreed to in writing, software 
 distributed under the License is distributed on an "AS IS" BASIS, 
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 See the License for the specific language governing permissions and 
 limitations under the License.
</%doc>
<%once>
use TUSK::Constants;
use TUSK::Functions;
use Apache2::Cookie;
use APR::Request::Cookie;
use Apache::TicketMaster::CAS;
use Apache::TicketMaster::Shib;
</%once>
<%doc>
	This page has some methods to display a form get the users password and verify that they are who they are.
	This uses ajax to trick most browsers into not displaying the grades.
	It does this by defining an onunload method.
	Here is a quick rundown of how to use this in TUSK.
	1. In your component (say view/course) you make a call to printPrivateLogin passing 1 arg (ajaxComponent) which is the name of an ajax component you will write
	2. printPrivateLogin makes a div and puts a standard message into it with a password field and a button
		(HINT Dont use this in an open form)
	3. When the user clicks the button an AJAX call is made using the passed component name
	4. Your AJAX method calls verifyLogin to verify that the user it legit
	5. Your AJAX method returns some HTML code that gets displayed in a second div
	6. When the page is unloaded a JS function:
		a. Emptys the div that the HTML was put into
		b. Hides said div
		c. Opens the origional div displaying the login form
	Hopfully this works out well
</%doc>

<%method verifyLogin>
	<%args>
		$args => {}
	</%args>
	<%perl>
		use HSDB45::Authentication;
		my $passwordVerified = 0;
		if($args->{userPassword}) {
			if($args->{genTime} > time()) {
				my $authen = HSDB45::Authentication->new();
				$passwordVerified = $authen->verify_password($m->session->{'user'},$args->{userPassword});
				#Do we want to be nasty and auto log people out after a specific number of tries?
				unless($passwordVerified) {
					#Display Login Not Valid
					$args->{errmsg} = __("Invalid Password");
				}
				else {$passwordVerified = 1;}
			} else {
				$args->{errmsg} = __("The amount of time that this page will be displayed has expired");
			}
		}
		return $passwordVerified;
	</%perl>
</%method>

<%method redisplayPrivateLogin>
	<%args>
		$hideGradeDiv => 0
	</%args>
	<span id="doLogin" style="display:none;"></span>
%	if($hideGradeDiv) {
		<span id="doGrade" style="display:none;"></span>
%	}
</%method>

<%method printPrivateLogin>
	<%args>
		$ajaxComponent
	</%args>

	<br>
	<div id="gradeDiv" style="display:none; width:100%;">
	</div>
	<div id="printPrivateLoginDiv" style="display:block;">
		<h2><%__("Important Privacy Notice")%></h2>
		<%__x("You are currently logged in as <b>{user}</b>", user => $m->session->{'user'}->out_full_name()) %></b>.<br>
		<%__x('This section of {SiteAbbr} contains private information.', $TUSK::Constants::SiteAbbr)%><br>
		<%__x('If you are not <b>{user}</b> please <a href="/dologout">Click Here</a>', user => $m->session->{'user'}->out_full_name())%>.<br>
		<br><% $TUSK::Constants::PrivacyNotice %><br><br>
		<script language="JavaScript"><!--
			var ajaxRequest;
			window.onunload=wipeGradeDiv;

			function wipeGradeDiv() {
				document.getElementById('printPrivateLoginDiv').style.display='block';
				document.getElementById('gradeDiv').style.display='none';
				document.getElementById('gradeDiv').innerHTML = '';
			}

			function redisplayLoginDiv() {
				if(document.getElementById('doLogin')) {
					if(document.getElementById('printPrivateLoginDiv')) {
						document.getElementById('printPrivateLoginDiv').style.display='block';
					} else {alert('<%__('Error: could not get login message')%>');}
				}
				if(document.getElementById('doGrade')) {
					if(document.getElementById('gradeDiv')) {
						document.getElementById('gradeDiv').style.display='none';
					} else {alert("<%__("Error: could not get this section div to hide... very strange!")%>");}
				}
			}
			function checkPassword() {
				if(document.theForm.userPassword.value=='') {
					alert('<%__('Please enter a password to login!')%>');
					document.theForm.userPassword.style.backgroundColor='yellow';
					return false;
				}
				var now = new Date();
				//getTime is in miliseconds.
				document.theForm.genTime.value = document.theForm.genTime.value + Math.round(((now.getTime() - startDate.getTime())/100));

				//Package up the form and submit it to the passed ajax component
				if (window.XMLHttpRequest) {
					ajaxRequest = new XMLHttpRequest();
				} else if (window.ActiveXObject) {
					ajaxRequest = new ActiveXObject("Microsoft.XMLHTTP");
				} else {
					alert('<%__('You can not view this section because your browser does not support AJAX.')%>');
				}
				if(ajaxRequest) {
					var parameters = 'userPassword=' + encodeURI( document.theForm.userPassword.value );
					parameters+= '&showGrades=' + encodeURI( document.theForm.showGrades.value );
					parameters+= '&genTime=' + encodeURI( document.theForm.genTime.value );
					ajaxRequest.open("POST", '<% $ajaxComponent %>', true);
					ajaxRequest.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
					ajaxRequest.setRequestHeader("Content-length", parameters.length);
					ajaxRequest.setRequestHeader("Connection", "close");
					ajaxRequest.send(parameters);
					ajaxRequest.onreadystatechange = displayGradeResults;
				}

			}
			function displayGradeResults() {
				if(!ajaxRequest) {return;}
				if(ajaxRequest.readyState == 4) {
					document.getElementById('printPrivateLoginDiv').style.display='none';
					document.getElementById('gradeDiv').style.display='block';
					document.getElementById('gradeDiv').innerHTML = ajaxRequest.responseText;
					redisplayLoginDiv();
				}
			}
			var startDate = new Date();
		//!--></script>
		<%doc>The return false prevents the form being submitted with the enter key</%doc>
		<form name="theForm" action="" method="post" onsubmit="document.theForm.showGrades.click(); return false;">
			<%__x('If you are {user} please enter your {SiteAbbr} password to view this section:',user => $m->session->{'user'}->out_full_name(), SiteAbbr => $TUSK::Constants::SiteAbbr)%>
			<input type="password" name="userPassword" value="" class="textareawhite" size="20">
			<input type="button" name="showGrades" value="<%__("Show Grade")%>" class="formbutton" onClick="return checkPassword();">
			<input type="hidden" name="genTime" value="<% time()+30 %>">
			<br>
		</form>
	</div>
	<br>
	<font class="bold_emphasis_font">
		*<%__x("{site} recommends that you logout after viewing this section to prevent other people from seeing this section.", site => $TUSK::Constants::SiteAbbr)%>
	</font>
</%method>



<%method build_login_box>
<%args>
$message => ''
$errmsg => ''
$is_mobi => 0
$url => ''
$failedLoginUser => ''
$logout => 'false'
$shibStatus => ''
$shibRedirectURL => ''
$forceGuestDisable => 0
$verticalButtons => 0
</%args>

<%perl>
	# Let the login know if we are a mobi site by setting the cookie
	my $cookie = APR::Request::Cookie->new($r->pool(), name => "loginType", value => 'normal', path => '/');
	if($is_mobi) {
		# We need to set a cookie to tell Shibboleth login to use the mobil page or the normal page
		$cookie = APR::Request::Cookie->new($r->pool(), name => "loginType", value => 'mobi', path => '/');
	}
	$r->err_headers_out->add('Set-Cookie' => $cookie->as_string);

	my $divText ='';
	if($logout eq 'shib') {
		$divText = __x('<center>You have succsfully logged out of {siteAbbr}.</center><br/><center><strong>However, you are still logged into {shibLogoutTitle}.</strong></center></br>{shibLogoutMsg}<br/><br/>',
				siteAbbr => $TUSK::Constants::SiteAbbr, shibLogoutTitle => $TUSK::Constants::Shibboleth{'logoutTitle'}, shibLogoutMsg => $TUSK::Constants::Shibboleth{'logoutMessage'}
		);
	} elsif($logout eq 'shibLocal') {
		$divText = __x('<p><strong>Status of Local Logout:</strong> {shibStatus}</p>You <strong>MUST</strong> close your browser to complete the logout process', shibStatus => $shibStatus);
	} elsif($logout eq 'shibPartial') {
		$divText = __('<p>You remain logged into one or more applications accessed during your session.</br><b>To complete the logout process, please close/exit your browser completely.</b></p>');
	} elsif($logout eq 'shibGlobal') {
		$divText = __('<p>it is strongly advised that you close your browser to ensure that you complete the logout process.</p>');
	}
</%perl>

<link rel="stylesheet" href="/style/loginForm.css?<% TUSK::Functions::get_tusk_version %>" type="text/css" />
<script type="text/javascript" language="JavaScript">
	$( window ).load(function() {
		document.forms['login'].elements['user'].focus();
%	if(Apache::TicketMaster::Shib::isShibEnabled() && $logout =~ /^shib/) {
		shibbolethLogoutOMG();
%	}
	});
	var origPadding;
	function displayLocalLogin(turnFormOn) {
		origPadding = $('#localLogin').css('padding-top');
		if(turnFormOn) {
%			if($is_mobi) {
				$('#localLogin').height( $('#localLogin').height() + 100 );
%			} else {
				$('#logLoginBox').width( $('#logLoginBox').width() + 125 );
%			}
			$('#localLoginForm').hide();
			$('#localLoginButton').fadeOut( 100, function() { $('#localLogin').css('padding-top', '25px'); $('#localLoginForm').fadeIn(100); } );
		} else {
			$('#localLoginButton').hide();
			$('#localLoginForm').fadeOut( 100, function() { $('#localLogin').css('padding-top', origPadding); $('#localLoginButton').fadeIn(100); } );
%			if($is_mobi) {
				$('#logLoginBox').width( $('#logLoginBox').width() - 125 );
%			} else {
				$('#logLoginBox').width( $('#logLoginBox').width() - 100 );
%			}
		}
	}
	function shibbolethLogoutOMG() {
		if($('#greyOutDiv').length == 0) {
			var greyOutDiv = $('<div>');
			greyOutDiv.attr('id', 'greyOutDiv');
			greyOutDiv.html('&nbsp;');
			$('body').append(greyOutDiv);
		}
		if($('#shibbolethOMG').length == 0) {
			var divOMG = $('<div>');
			divOMG.attr('id', 'shibbolethOMG');
			divOMG.html('<% $divText %>');

			var centerDiv = $('<div>').css({ 'text-align' : 'center', 'margin' : '0 auto', 'margin-top' : '20px' });
			var cancelButton = $('<div>').attr('id', 'dismissShibMessageButton').addClass('lightLoginButton').html('<% __('Dismiss Message') %>');
				cancelButton.css({ 'margin-right' : '10px', 'float' : 'left', 'margin-left' : '25px' });
				cancelButton.addClass();
				cancelButton.click(function() { $('#greyOutDiv').hide(); $('#shibbolethOMG').hide(); });
			var continueButton = $('<div>').addClass('darkLoginButton').html('<% __('Logout of') %> <% $TUSK::Constants::Shibboleth{'displayName'} %>');
				continueButton.css({ 'float' : 'right', 'margin-right' : '25px' });
				continueButton.click(function() { window.location = '<% Apache::TicketMaster::Shib::getIdPLogoutURL() %>'});
			centerDiv.append(cancelButton);
%			if(Apache::TicketMaster::Shib::getIdPLogoutURL() ne '') {
			centerDiv.append(continueButton);
%			}
			divOMG.append(centerDiv);

			$('body').append(divOMG);
		}
	}
</script>
<%perl>
	my $themeImage = '';
	my %logoHash = ();
	$logoHash{'2-14'} = '/graphics/icons/hrtback.gif';
	$logoHash{'10-31'} = '/graphics/icons/halloween3.gif';
 
	my ($sec, $min, $hour, $mday, $mon, $year, $wday, $isdst) = localtime(time());
	$mon++;
	$year += 1900;
 
	my $date = "$mon-$mday";
	$themeImage = $logoHash{$date} if ($logoHash{$date});
 
	my $ssrv = $r->dir_config('SecureLogin') || 'https://'.$TUSK::Constants::Domain.'/login';
	my $width = 0;
	my $hasLogin = 0;
	my @loginItems;
	# button width is the width of class div.prettyLoginButton
	my $buttonWidth = $TUSK::Constants::LoginButtonWidth;
	if(!$buttonWidth) { $buttonWidth = '110'; }
	foreach my $loginItem (@TUSK::Constants::LoginButtonSequence) {
		$loginItem = lc($loginItem);
		if($loginItem eq 'guest') {
			if(!($TUSK::Constants::DisableGuestLogin || $is_mobi)) {
				$hasLogin = 1;
				$width += $buttonWidth;
				push @loginItems, $loginItem;
			}
		} elsif($loginItem eq 'cas') {
			if($TUSK::Constants::CAS{'Enabled'}) {
				$hasLogin = 1;
				$width += $buttonWidth;
				push @loginItems, $loginItem;
			}
		} elsif($loginItem eq 'shib') {
			if($TUSK::Constants::Shibboleth{'Enabled'}) {
				$hasLogin = 1;
				$width += $buttonWidth;
				push @loginItems, $loginItem;
			}
		} elsif($loginItem eq 'local') {
			if($TUSK::Constants::EnableLocalLogin) {
				$hasLogin = 1;
				$width += $buttonWidth;
				push @loginItems, $loginItem;
			}
		} elsif($loginItem eq 'theme') {
			if($themeImage) {
				# 50 is the width + the margins of the theme image span below
				$width += 60;
				push @loginItems, $loginItem;
			}
		} else {
			warn("Login option '$loginItem' is invalid");
		}
	}
	if($hasLogin) {
		my $numSpacers = $#loginItems;
		# 11 is the width of span.loginSpacer class; 2 * scalar loginItems is for div borders
		$width = $width + ($numSpacers * 11) + (2 * scalar(@loginItems));
	} else {
		push @loginItems, '<div style="padding-top: 50px;"><i>There are no configured login mechnisims</i></div>';
	}
</%perl>
<%doc>Override the [span|div].prettyLoginButtonWidth here based on the actual width</%doc>
<style>
	div.darkLoginButton, div.lightLoginButton {
		width: <% $buttonWidth %>px;
	}

% if($verticalButtons) {
	div.darkLoginButton, div.lightLoginButton {
		margin: 7px 23px;
	}

	fieldset {
		border: 0px solid black;
	}

	span.loginButtonSpan {
		padding-top: 0px;
		height: 55px;
		float: none;
	}
% }

% if($is_mobi) {
	div#localLoginForm {
		height: 150px;
		margin-left: 33px;
	}

	div#shibbolethOMG {
		height: auto;
		width: auto;
		left: 20px;
		top: 20px;
		right: 20px;
		margin-left:0px;
		margin-top:0px;
		padding-bottom: 50px;
	}
% }
</style>
<div id="logLoginBox" style="width: <% $width %>px;">
	<div id="errordiv">
%	if($message && $logout !~ /^shib/){
%		$message =~ s/</&lt;/g;
%		$message =~ s/>/&gt;/g;
%		my $prefix = ($is_mobi)? '/mobi' : '';
		<p class="errTxt"><% $message %></p>
		<p class="errTxt"><% $errmsg %></p>
		<p class="xxsm">If you believe you got this message in error please <a href="<% $prefix %>/about/contact_us">contact us</a></p>
%	}
%	if(Apache::TicketMaster::CAS::isCASEnabled() && $logout eq 'true') {
		You have succsfully logged out of <% $TUSK::Constants::SiteAbbr %>.<br/>
		<b>if you would also like to log out of<br/>
		<% $TUSK::Constants::CAS{'displayName'} %> <a href="<% Apache::TicketMaster::CAS::getLogoutURL() %>">Click Here</a></b>
%	}
	</div>

%	foreach (0..$#loginItems) {
%		if($loginItems[$_] eq 'guest' && !$forceGuestDisable) {
%			my $buttonLabel = __('Guest Access');
%			if($TUSK::Constants::OverrideGuestLoginButton) { $buttonLabel = $TUSK::Constants::OverrideGuestLoginButton; }
			<span id="guestLogin" class="loginButtonSpan">
			<div id="guest_access" onclick="location.href='/view/courses'" class="lightLoginButton"><% $buttonLabel %></div>
			</span>
%		} elsif($loginItems[$_] eq 'theme') {
			<span style="margin: 25px 5px; width: 50px; height: 65px; background:#fff 96% top no-repeat url('<% $themeImage %>'); float:left;"></span>
%		} elsif($loginItems[$_] eq 'cas') {
			<span id="casLogin" class="loginButtonSpan">
				<div id="webauthButton" onclick="location.href='<% Apache::TicketMaster::CAS::getLoginUrl() %>'" class="darkLoginButton"><% $TUSK::Constants::CAS{'displayName'} %></div>
			</span>
%		} elsif($loginItems[$_] eq 'shib') {
%			my $shibURL = Apache::TicketMaster::Shib::getLoginUrl();
%			if($shibRedirectURL) { $shibURL .= "?target=$shibRedirectURL"; }
			<span id="shibLogin" class="loginButtonSpan">
%			if(!$logout || $logout eq 'false') {
%				my $iframeSrc = 'https://'. $TUSK::Constants::Domain .'/shib/login?testConnection=1';
				<iframe id="shibTestIFrame" style="display: none; position: fixed; bottom: 10px; right: 10px; height:200px; width:350px;" src="<% $iframeSrc %>"></iframe>
%			}
				<div id="shibButton" onclick="location.href='<% $shibURL %>'" class="darkLoginButton"><% $TUSK::Constants::Shibboleth{'displayName'} %></div>
			</span>
%		} elsif($loginItems[$_] eq 'local') {
%			if ($is_mobi && !$url) {
%				$url = '/mobi/home';
%			}
%			if ($url && $url =~ /^\// ) {
%				$m->comp('/tmpl/element:hidden_form_element', params => { name => 'request_uri', value => $url });
%			}
			<span class="loginButtonSpan" id="localLogin" style="overflow: visible; border-right: 0px solid black;">
				<div id="localLoginForm" style="display:none; overflow:visible;">
					<& /tmpl/element:form, params => { action => $ssrv, method => 'post', name => 'login'} &>
						<fieldset style="display: inline-block;">
							<label for="user" class="xsm"><%__('Username:')%></label>
							<input name="user" type="text" class="textareawhite" size="20" value="<% $failedLoginUser %>"/>
						</fieldset><br/>

						<fieldset style="display: inline-block;">
							<label for="password" class="xsm"><%__('Password:')%></label>
							<input name="password" type="password" class="textareawhite" size="20"/><br/>
						</fieldset>
%					unless($TUSK::Constants::DisableForgotYourPassword) {
						<div style="width: 100%; padding-left: 50px;">
							<& /tmpl/element:submit_button, params => { name => 'Submit', label => __('Login') } &>
%							if(!$is_mobi && !$verticalButtons) {
							<a class="xsm loginHelp" href="/tusk/tools/pswdreset"><%__('Forgot your password?')%></a>
%							}
						</div>
%					}
					</form>
				</div>
				<span>
%					my $buttonLabel = $TUSK::Constants::SiteAbbr .' '. __('Login');
%					if($TUSK::Constants::OverrideDefaultLoginButton) { $buttonLabel = $TUSK::Constants::OverrideDefaultLoginButton; }
					<div id="localLoginButton" onclick="displayLocalLogin(true);" class="lightLoginButton"><% $buttonLabel %></div>
        			</span>
			</span>
%		}

%		if($loginItems[$_ + 1]) {
%			unless($verticalButtons) {
				<span class="loginSpacer">&nbsp;</span>
%			}
%		}
%	}

%	unless($is_mobi) {
		<script type="text/javascript">isValidTUSKBrowser();</script>
%	}
</div><!-- logLoginBox -->

</%method>
