<%doc>
 Copyright 2012 Tufts University 

 Licensed under the Educational Community License, Version 1.0 (the "License"); 
 you may not use this file except in compliance with the License. 
 You may obtain a copy of the License at 

 http://www.opensource.org/licenses/ecl1.php 

 Unless required by applicable law or agreed to in writing, software 
 distributed under the License is distributed on an "AS IS" BASIS, 
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 See the License for the specific language governing permissions and 
 limitations under the License.
</%doc>

<div id="domain">
<%perl>
use HSDB45::TeachingSite;

use HSDB45::Course;
use HSDB45::TimePeriod;
use TUSK::Course;
use TUSK::Academic::Level;
use TUSK::Academic::LevelClinicalSchedule;


my $teaching_sites = $m->comp("SELF:get_teaching_sites");


my @teaching_site_dropdown;

my $empty_teaching_site_hash = {
	label => "(Select a teaching site:)"
};

push @teaching_site_dropdown, $empty_teaching_site_hash;


print "<span id=\"teaching_site_select\">View by Teaching Site: </span>";
$m->comp("/tmpl/element:dropdown", params => {
	name => 'current_teaching_site',
	options => \@teaching_site_dropdown,
});

print "<span id=\"academic_year_select\">Filter by Academic Year: </span>";
$m->comp("/tmpl/element:dropdown", params => {
	name => 'current_teaching_site',
	options => \@teaching_site_dropdown,
});

my $placement_rows = $m->comp("SELF:get_placements_by_time_period");
#print Dumper $placement_rows;
#print "<br>";

my $col_fields = [];
my @rows = ();
my @time_period_student_array;

foreach my $placement_row (@{$placement_rows}) {
	my $title = (keys %{$placement_row})[0];
	push @{$col_fields}, {label => $title, field => $title};
	foreach my $student_row ($placement_row->{students}) {
		my $row_count = 0;
		foreach my $student (@{$student_row}) {
			my $student_name = $student->{last_name} . ", " . $student->{first_name} . " " . $student->{middle_name};
			$time_period_student_array[$row_count] = $time_period_student_array[$row_count] . " " .$student_name."</td>";
=for			
			push @rows, {
				$title => $student_name
			};
=cut
			$row_count++;
		}
	}
=for
	push @rows, {
		$title => "Test Student"
	};
=cut
}
my $row = 0;
print Dumper $col_fields;
print "<br>";
foreach my $title (@{$col_fields}) {
	push @rows, {
		$title->{} => $time_period_student_array[$row]
	};
	$row++;
}

print Dumper @rows;


</%perl>
</div>
<& /tmpl/element:object_selection_box, params => {
				columns => $col_fields,
				rows => \@rows,
				name => "courses",
				'norows-message' => __( "No Students" ),
} &>
<div id="placement_wrapper">

</div>

<%method stylearray>
% return ['/style/style.css','/style/home.css']
</%method>

<%method jsarray>
<%perl>
	return [ 
			"jquery/jquery.min.js",
			"jquery/plugin/interface/interface.js",
			];
</%perl> 
</%method>

<%method red_header_text>
% return $m->comp("SELF:title");
</%method>

<%method title>
% return __("Clinical Placement");
</%method>

<%method get_teaching_sites>
<%perl>
	my $school = $m->comp('/tmpl/url:get_school');
	my $teaching_sites = HSDB45::TeachingSite->new(_school => $school);
	print "<br>";
	
	my $time_periods = HSDB45::TimePeriod->new( _school => $school )->lookup_conditions("");

</%perl>
</%method>

<%method get_placements_by_time_period>
<%perl>
	my $course_id = 230;
	my $tusk_course_id = TUSK::Course->getTuskCourseIDFromSchoolID(1, $course_id);
	my $school = $m->comp('/tmpl/url:get_school');
	my $db = HSDB4::Constants::get_school_db($school);
	my $academic_year = 2008;
	my $teaching_site_id = 0;

	my $placements = TUSK::Course->lookup("course.course_id = $tusk_course_id", undef, undef, undef,  
				[
				TUSK::Core::JoinObject->new("TUSK::Core::HSDB45Tables::LinkCourseStudent", {database => $db, origkey => 'school_course_code', joinkey => 'parent_course_id', jointype => 'inner'}),
				TUSK::Core::JoinObject->new("TUSK::Course::AcademicLevel", {origkey => 'course_id', joinkey => 'course_id', jointype => 'inner'}),
				TUSK::Core::JoinObject->new("TUSK::Academic::LevelClinicalSchedule", {origkey => 'academic_level_course.academic_level_id', joinkey => 'academic_level_id', jointype => 'inner'}),
				TUSK::Core::JoinObject->new("TUSK::Core::HSDB45Tables::TimePeriod", {database => $db, origkey => 'link_course_student.time_period_id', joinkey => 'time_period_id', jointype => 'inner', joincond => "academic_year = $academic_year"})
				]);

	my $course_students = TUSK::Course->lookup("course.course_id = $tusk_course_id", undef, undef, undef, 
				[ TUSK::Core::JoinObject->new("TUSK::Core::HSDB45Tables::LinkCourseStudent", {database => $db, origkey => 'school_course_code', joinkey => 'parent_course_id', jointype => 'inner'}),
				  TUSK::Core::JoinObject->new("TUSK::Core::HSDB4Tables::User", {origkey => 'link_course_student.child_user_id', joinkey => 'user_id', jointype => 'inner'})
				]);

	my %student_hash = ();

	foreach my $course_student(@{$course_students->[0]->getJoinObjects('TUSK::Core::HSDB4Tables::User')}) {
		my %temp_hash;
		$temp_hash{first_name} = $course_student->getFieldValue('firstname');
		$temp_hash{last_name} = $course_student->getFieldValue('lastname');
		$temp_hash{middle_name} = $course_student->getFieldValue('midname');
		my $student_id = $course_student->getFieldValue('user_id');
		$student_hash{$student_id} = {%temp_hash};
	}

	my @placement_rows;
	
	if (scalar @{$placements} > 0){
		foreach my $time_period (@{$placements->[0]->getJoinObjects('TUSK::Core::HSDB45Tables::TimePeriod')}) {
			my %time_period_hash;
			my %temp_hash;
			$temp_hash{start_date} = $time_period->getStartDate;
			$temp_hash{end_date} = $time_period->getEndDate;
			$time_period_hash{$time_period->getPeriod} = {%temp_hash};
			$time_period_hash{students} = [];
			
			foreach my $link_course_student (@{$placements->[0]->getJoinObjects('TUSK::Core::HSDB45Tables::LinkCourseStudent')}) {
				my $current_student_id = $link_course_student->getFieldValue('child_user_id');
				push @{$time_period_hash{students}}, {%{$student_hash{$current_student_id}}};
			}

			push @placement_rows, {%time_period_hash};
		}
	}
	return \@placement_rows;
=for
	foreach my $placement (@{$placements}) {
		#pre_dump($placement);		
		#my %temp_hash;
		#$temp_hash{period} = 
		pre_dump($placement->getJoinObjects('TUSK::Core::HSDB45Tables::LinkCourseStudent'));
		#push @placement_rows, {%temp_hash};
	}	

	print "rows:<br>";
	print Dumper @placement_rows;
	print "<br>";
=cut	
</%perl>
</%method>



