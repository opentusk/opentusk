<%doc>
 Copyright 2012 Tufts University 

 Licensed under the Educational Community License, Version 1.0 (the "License"); 
 you may not use this file except in compliance with the License. 
 You may obtain a copy of the License at 

 http://www.opensource.org/licenses/ecl1.php 

 Unless required by applicable law or agreed to in writing, software 
 distributed under the License is distributed on an "AS IS" BASIS, 
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 See the License for the specific language governing permissions and 
 limitations under the License.
</%doc>

<%attr>
	top_tab_type            	=> 'manage'
	check_cms_permissions		=> 1
	default_path_type		=> 'course'
	show_tp_dropdown_no_cache 	=> 1 
</%attr>

<%once>
	use TUSK::Manage::Course::Users2;
</%once>


<& /tmpl/element:table, params => { 
	width => "100%",
	border =>"0",
	cellspacing =>"0",
	cellpadding =>"0" } &>

% if ($is_director_nonstudent) {
<tr>
	<td class="button-left">
% if ($is_group_course) {
	<div class="gCMSButtonRow">
		<a href="/management/course/users/addedit/<% $selfpath %>"><%__("Add Individual Members")%></a>
		<a href="/management/course/users/addgroupmembers/course/<% $selfpath %>"><%__("Add Members By User Group")%></a>
	</div>
% } elsif ($is_thesis_comm) {
	<div class="gCMSButtonRow">
		<a href="/management/course/users/addedit/<% $selfpath %>"><%__("Add Members")%></a>
	</div>
% } else {
	<& /tmpl/element:cms_button_row, links => [
		{ link_txt    => '/management/course/users/addedit/' . $selfpath,
		  display_txt => __('New Faculty') . '&amp; ' . __('Staff')
		} ]
	&>
% }

</td></tr>
<tr><td>

% } else {
	<tr><td class="no-button">
% }

% if ($data->{usercount}) {
<& /tmpl/element:form, params => {
	method => 'POST',
	class => 'no-padding',
	name => 'users' } 
&>

<& /tmpl/element:table, params => { 
	width => "100%",
	class =>"tusk",
	cellspacing =>"0",
	cellpadding =>"0" }
&>

<tr class="header">

<%perl>
	my @rows = ();
	foreach my $course_user (@{$data->{users}}) {
		push @subrows, $m->comp('SELF:set_row', course_user => $course_user);
	}

	my $sort_box = 0;
	my action_column_align = undef;
	if ($is_director_nonstudent && !$is_group_course) {
		$sort_box = 1;
		$action_column_align = 'left';
	}
</%perl>

<& /tmpl/element:object_selection_box, params => { 
	sort_box => $sort_box,
	columns => [ 
		{'label' => __('UserID'), 'field' => 'id' },
		{'label' => __('Name'), 'field' => 'name'},
		{'label' => __('Role(s)'), 'field' => 'roles'}, 
		{'label' => __('Label(s)'), 'field' => 'labels'}, 
		{'label' => __('Teaching Sites'), 'field' => 'teaching_sites'},
		{'label' => __('Affiliation'), 'field' => 'affiliation'},
	],
	action_columns => [ 
		{ 'label' =>__('Modify'),'link' => '/management/course/users/addedit' },
		{ 'label' =>__('Delete'),'link' => '/management/course/users/delete' },
	],
	action_column_align => $action_column_align,
	rows => \@rows,
	type_path => $m->comp("/tmpl/url:get_type_path"),
	name => "people",
} &>


<%perl>
% if ($data->{subusercount}) {
	my @subrows;
	foreach my $key (sort keys %{$data->{subusers}}) {
		foreach my $sub_course_user (@{$data->{subusers}{$key}}) {
			push @subrows, $m->comp('SELF:set_row', course_user => $sub_course_user);
		}
	}
</%perl>

<h2 style="color: #CC3300; padding: 25px 0 1px 0; margin: 0;">Subcourse Faculty</h2>

<& /tmpl/element:object_selection_box, params => { 
	columns => [ 
		{'label' => __('UserID'), 'field' => 'id' },
		{'label' => __('Name'), 'field' => 'name'},
		{'label' => __('Course'), 'field' => 'course'},
		{'label' => __('Role(s)'), 'field' => 'roles'}, 
		{'label' => __('Lables'), 'field' => 'labels'}, 
		{'label' => __('Teaching Site'), 'field' => 'teaching_site'}
		{'label' => __('Affiliation'), 'field' => 'affiliation'}
	],
	rows => \@subrows,
	type_path => $m->comp("/tmpl/url:get_type_path"),
	name => "subpeople",
} &>
% } # if subusercount
% } # if usercount

</form>
</td>
</tr>
</table>

<%init>
	my $selfpath = $m->comp("/tmpl/url:get_full_path");
	my $school = $m->comp("/tmpl/url:get_school");
	my $course_id = $m->comp("/tmpl/url:get_type_object")->course_id;
	my $course = HSDB45::Course->new( _school => $school )->lookup_key($course_id);
	my $time_period_id = $m->comp("SELF:get_timeperiod_id");
	my @usergroups = $course->sub_user_groups($time_period_id); 
	my $is_group_course = $course->type eq 'group';
	my $is_thesis_comm = $course->type eq 'thesis committee';
	my $is_director_nonstudent = $m->comp("SELF:check_course_permissions", token => 'DIRECTORNONSTUDENT');

	my $helper = TUSK::Manage::Course::Users2->new();
	my $data = $helper->show_pre_process($school, $course_id, $time_period_id, undef);

	if (defined($ARGS{order})) {
		$helper->change_order(delete $ARGS{order}, $data->{users});
	}
</%init>


<%method set_row>
<%args>
	$course_user
</%args>
<%perl>
	my $user_id = $course_user->getUserID();
	my ($name, $affiliation = ('', '');
	if (my $user = $course_user->getJoinObject('TUSK::Core::HSDB4Tables::User')) {
		$name = $user->outLastFirstName();
		$affiliation = $user->getAffiliation();
	} 

	my $teaching_sites = join ',  ', sort { lc($a) cmp lc($b) } map { $_->getSiteName() } 
				grep { defined $_->getJoinObject('TUSK::Core::HSDB45Tables::TeachingSite') } 
				@{$_->getJoinObjects('TUSK::Course::User::Site')}

	my $roles = join ', ', sort { lc($a) cmp lc($b) } map { $_->getRoleDesc() } 
				grep { ! $_->getFieldValue('virtual_role') } 
				grep { defined $_->get_first_join_object('TUSK::Permission::Role') }
				@{$_->getJoinObjects('TUSK::Permission::UserRole')}

	my $labels = join ', ', sort { lc($a) cmp lc($b) } map { $_->getFieldValue('role_desc') } grep { $_->getFieldValue('virtual_role') } @$roles; 

	if ($is_thesis_comm) {
		s/director/Advisor/i for $role, $labels;
		s/author/Committee Member/i for $role, $labels;
	}

	return {
		user_id => $user_id,
		name => $name,
		role => $role,
		labels => $labels,
		teaching_sites => $teaching_sites,
		affiliation => $affiliation,
		id => $course_user->getPrimaryKeyID(),
	};
</%perl>
</%method>

<%method title>
% 	return __("Manage Faculty and Staff");
</%method>

<%method red_header_text>
% 	return $m->comp("SELF:title");
</%method>

