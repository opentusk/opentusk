<%doc>
 Copyright 2012 Tufts University

 Licensed under the Educational Community License, Version 1.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.opensource.org/licenses/ecl1.php

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
</%doc>
<%shared>
my program_id       = $m->comp("/tmpl/url:get_last_path_id");
my $school          = $m->comp("/tmpl/url:get_school");
my $type_object     = $m->comp("/tmpl/url:get_type_object");
my $base_url        = "/management/program/addedit";
</%shared>

<& /tmpl/element:form, params => {
                                method => 'POST',
                                onsubmit =>undef,
                                name => 'addedit' } &>

<& /tmpl/element:table, params => {
                                width       => "100%",
                                border      =>"0",
                                cellspacing =>"0",
                                cellpadding =>"0" } &>

% if ($is_course_group) {
% my %temphash;
% if ( $form_action eq 'add' ) {
%       %temphash = ( 'timeperiod' => $timeperiod );
% } else {
%       %temphash = ( 'timeperiod' => $course->user_group_link()->get_row( $course->primary_key(), $usergroup->primary_key() )->{'time_period_id'} );
% }
<& /tmpl/element:field_display, params =>{
                                label  => __('Time Period'),
                                value  => TUSK::Functions::get_selected_timeperiod_display( $school, \%temphash ) } &>
% }

<& /tmpl/element:textbox, params =>{
                                label  => __('Group Name'),
                                name   => 'label',
                                value  => $usergroup->field_value( 'label' ),
                                size   => 60,
                                length => 255 } &>

<& /tmpl/element:textarea, params=>{
                                label => __('Description'),
                                name  => 'description',
                                cols  => '60',
                                rows  => '4',
                                value => $usergroup->field_value( 'description' ) } &>

% if ($is_course_group) {

<script language="Javascript">
function addmember(layer, index){
        data = layers[layer].structure.data[index];
        remove(layer, index);
        layers['membersdiv'].adddata(data, 1);
}
</script>
<& /tmpl/element:sort_order_box , params =>{
        no_add_button => 1,
        label => __('Available Members'),
        buttons => [ ],
        layer_info => {
                                                context_path => $m->comp("/tmpl/url:get_full_path"),
                                                base_path =>  $m->comp("/formbuilder/util:get_base_dir"),

                                                layer => 'rosterdiv',
                                                fields => ['userid','name'],
                                                name => 'users',
                                                sort => {usage => 'No'},
                                                sortoninsert => {usage => 'Yes', sorton => 'name'},
                                                action => {usage => 'Yes', length=>100, functions => [{func=>'addmember', label=>__('Add')}]},
                                                display => [
                                                                                {field=>'name', align=>'left', length=>225,},
                                                                                {field=>'userid', label=>__('UserID'), align=>'left', length=>75,}
                                                                        ],
                                                validate => {
                                                                                usage => 'No',
                                                                        },
                                                data => \@studentarray
                                        }
            } &>
% } else {
<%perl>
my %selected_hash;
foreach my $selected( split( ",", $usergroup->field_value('homepage_info') ) ) {
        $selected_hash{$selected} = 1;
}
</%perl>
<& /tmpl/element:dropdown, params=>{
                                label    => __('Homepage Info'),
                                name     => 'homepage_info',
                                size     => '4',
                                multiple => 'multiple',
                                options  => [
                                                        { label => __("Hot Content"),   value => "Hot Content" },
                                                        { label => __("Announcements"), value => "Announcements" },
                                                        { label => __("Evals"),         value => "Evals" },
                                                        { label => __("Discussion"),    value => "Discussion" }
                                                        ],
                                selected => \%selected_hash,
                                 } &>

<& /tmpl/element:textbox, params =>{
                                label    => __('Schedule Flag Time'),
                                name     => 'schedule_flag_time',
                                value    => $usergroup->field_value( 'schedule_flag_time' ),
                                size     => '12',
                                calendar => '1' } &>
% }

<%perl>
my ($button_text, $empty_msg);
if ( !$is_course_group ) {
        $button_text = $m->scomp('/tmpl/element:button', params=>{'name'=>'add_user_button',
                                                         'onclick'=>"openwindow('membersdiv');",
                                                         'label'=>__('Add Names')} );
        $empty_msg = __('Click \"Add Names\" to add members.');
} else {
        $empty_msg = __('Select users from above.');
}
</%perl>
<& /tmpl/element:sort_order_box , params =>{
        no_add_button => 1,
        label => __('Current Members'),
        buttons => [ $button_text ],
        layer_info => {
                                                context_path => $m->comp("/tmpl/url:get_full_path"),
                                                base_path =>  $m->comp("/formbuilder/util:get_base_dir"),

                                                layer => 'membersdiv',
                                                empty_message => $empty_msg,
                                                fields => ['userid','name'],
                                                name => 'users',
                                                sort => {usage => 'No'},
                                                sortoninsert => {usage => 'Yes', sorton => 'name'},
                                                action => {usage => 'Yes', length=>100, functions => [{func=>'remove', label=>__('Delete')}]},
                                                display => [
                                                                                {field=>'name', align=>'left', length=>225,},
                                                                                {field=>'userid', label=>__('UserID'), align=>'left', length=>75,}
                                                                        ],
                                                validate => {
                                                                                usage => 'No',
                                                                        },
                                                data => \@userarray
                                        }
            } &>

<& /tmpl/element:hidden_form_element, params =>{
                                name   => 'action',
                                value  => $form_action } &>

<& /tmpl/element:save_button, params=>{label=>__('Save Changes'),
                                cancel_onclick=>"go_back('" . $m->comp("/tmpl/url:construct_url",
                                'base_url' => "/management/usergroup/show") . "');",
                                name=>'submit'} &>

</table>
</form>

<%init>
my $usergroup;
my $form_action;
if ($usergroup_id){
        $usergroup = HSDB45::UserGroup->new( _school => $school )->lookup_key($usergroup_id);
        $form_action = "edit";
} else {
        $usergroup = HSDB45::UserGroup->new( _school => $school );
        $form_action = "add";
}

my @userarray;
my @studentarray;
my %seen_hash;

foreach my $user ($usergroup->child_users()) {
        push (@userarray, {userid => $user->primary_key, name => $user->out_lastfirst_name});
        $seen_hash{$user->primary_key} = '1';
}

if ( $is_course_group ) {
        foreach my $student ( $course->get_students(  ) ) {
                next if $seen_hash{$student->primary_key};
                push (@studentarray, {userid => $student->primary_key, name => $student->out_lastfirst_name});
        }
}

my ($msg,$msgtype) = (undef,"msg");
my $rval = 0;
my $extra = "";

if ( defined($ARGS{'submit'}) ) {
        my $groups = [ HSDB45::UserGroup->new( _school => $school )->lookup_conditions("sub_group='No'") ];

        $usergroup->set_field_values( label => $ARGS{'label'}, description => $ARGS{'description'} );

        if ($ARGS{'action'} eq "add") {
                if ($is_course_group) {
                        my $groups = [ $course->sub_user_groups( $timeperiod ) ];
                        $usergroup->set_field_values( sub_group=>'Yes', sort_order=>scalar(@{$groups}) );
                } else {
                        $usergroup->set_field_values( sort_order=>scalar(@{$groups}) );
                }
        }

        if (!$is_course_group) {
                if ( $ARGS{'schedule_flag_time'} ne "" ) {
                        $usergroup->set_field_values( schedule_flag_time => $ARGS{'schedule_flag_time'});
                }

                if (ref($ARGS{'homepage_info'})) { $ARGS{'homepage_info'} = join( ",", @{$ARGS{'homepage_info'}} ); }
                $usergroup->set_field_values( homepage_info => $ARGS{'homepage_info'} );
        }

        ($rval, $msg) = $usergroup->save();
        if ($ARGS{'action'} eq "add") { $extra = $rval; }

        # add link_course_user_group
        if ($is_course_group && $ARGS{'action'} eq 'add') {
                ($rval, $msg) = $course->add_child_user_group_link("", "", $usergroup->primary_key, $timeperiod);
        }

        my $current_users = $usergroup->child_users_hashref();
        my @users = TUSK::Functions::get_data(\%ARGS, "members");
        foreach my $user (@users) {
                if ( !defined($current_users->{$user->{pk}}) ) {
                        ($rval, $msg) = $usergroup->add_child_user("", "", $user->{pk});
                }

                $current_users->{$user->{pk}} = 2;
        }

        foreach my $user_id (keys %$current_users) {
                if ( $current_users->{$user_id} != 2 ) {
                        ($rval, $msg) = $usergroup->delete_child_user("", "", $user_id);
                        $current_users->{$user_id} = undef;
                }
        }

        if ($ARGS{'action'} eq "add") {
                $ARGS{'page'} = "edit";
                $msg = __("User Group Successfully Added");
        } else {
                $msg = __("User Group Successfully Updated");
        }
}

if ( $msg ) {
        $m->redirect($m->comp("/tmpl/url:construct_url", 'base_url'=>$base_url, 'msg'=>$msg, 'msgtype'=>$msgtype, 'extra'=>$extra));
}
</%init>

<%method jsarray>
% return ['layers.js','element.js','calendar.js','calendar-en.js','calendar-setup.js'];
</%method>

<%method red_header_text>
% return $m->comp( "SELF:title" );
</%method>

<%method title>
<%perl>
my $title = __("Create User Group");
if ($usergroup_id){
        $title  = __("Modify User Group");
}
return $title;
</%perl>
</%method>
