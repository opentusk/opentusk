<%doc>
 Copyright 2012 Tufts University 

 Licensed under the Educational Community License, Version 1.0 (the "License"); 
 you may not use this file except in compliance with the License. 
 You may obtain a copy of the License at 

 http://www.opensource.org/licenses/ecl1.php 

 Unless required by applicable law or agreed to in writing, software 
 distributed under the License is distributed on an "AS IS" BASIS, 
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 See the License for the specific language governing permissions and 
 limitations under the License.
</%doc>

<%once>
	use TUSK::Competency::Competency;
	use TUSK::Competency::UserType;

	use TUSK::Application::Competency::Tree;
	use TUSK::Application::Competency::Competency;
</%once>

% $m->comp("SELF:create_first_layer");

<div id="visualization">

</div>

<%method jsarray>
<%perl>
	return [ 
			"jquery/jquery.min.js",
			"jquery/plugin/interface/interface.js",
			"jquery/plugin/json.js",
			"d3/d3.min.js",
			"competency/competency/vis.js"
			];
</%perl> 
</%method>

<%method red_header_text>
% return $m->comp("SELF:title");
</%method>

<%method title>
% return __("Interactive Competency Visualization Tree");
</%method>

<%method create_first_layer>
<%perl>
	my $school_id = 1;
	my $category_user_type_id = TUSK::Competency::UserType->lookupReturnOne("school_id =" . $school_id, undef, undef, undef, [TUSK::Core::JoinObject->new("TUSK::Enum::Data", 
					{origkey => 'competency_type_enum_id', joinkey => 'enum_data_id', jointype => 'inner', joincond => "namespace = 'competency.user_type.id' AND short_name='category'"})])->getPrimaryKeyID;
	my $national_level_id = TUSK::Enum::Data->lookupReturnOne("namespace = 'competency.level_id' AND short_name = 'national'")->getPrimaryKeyID;
	my $national_categories = TUSK::Competency::Competency->lookup("school_id = $school_id AND competency_user_type_id = $category_user_type_id AND competency_level_enum_id = $national_level_id", [ 'competency_id' ]);

	foreach my $national_category (@{$national_categories}) {
		my $national_category_id = $national_category->getPrimaryKeyID;
		my $this_national_category = {
			competency_id => $national_category_id
		};
		my $top_level_national_comps = TUSK::Application::Competency::Competency->new($this_national_category)->getChildren;
		print Dumper $top_level_national_comps;
		print "<br><br>";
	}
</%perl>
</%method>

