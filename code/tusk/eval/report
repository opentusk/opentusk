<%doc>
 Copyright 2012 Tufts University 

 Licensed under the Educational Community License, Version 1.0 (the "License"); 
 you may not use this file except in compliance with the License. 
 You may obtain a copy of the License at 

 http://www.opensource.org/licenses/ecl1.php 

 Unless required by applicable law or agreed to in writing, software 
 distributed under the License is distributed on an "AS IS" BASIS, 
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 See the License for the specific language governing permissions and 
 limitations under the License.
</%doc>
<%once>
	use HSDB45::Eval;
	use HSDB45::Eval::Results;
	use Apache2::Const qw (FORBIDDEN);
	use TUSK::Eval::EvalLoadTime;
	use TUSK::Constants;
</%once>

<%attr>
	page_header => '/tmpl/prepend:manage_header_div_layout'
	page_footer => '/tmpl/footer:footer_div'
	skip_header_bar => 1
	allow_guest => 0
	must_be_eval_admin => 1
</%attr>

<%method title>
%       return __("Eval Report").": $title";
</%method>

<%method jsarray>
%       return [ 'eval.js', 'evalReports.js' ];
</%method>

<%method stylearray>
%	return ['/style/style.css', '/style/eval.css', '/style/grapher.css'];
</%method>

<%shared>
	my $eval;
	if($ENV{'PATH_INFO'} =~ /\/(.+)\/(.+)\/(.+)/) {
		$eval = HSDB45::Eval->new(_school => $1, _id => $2);
	} else {
		$eval = HSDB45::Eval->lookup_path( $ENV{'PATH_INFO'} );
	}
	# Check for valid user
	unless($eval->admin_group()->contains_user($m->session->{'user'})) {
		$r->status(FORBIDDEN);
		$m->abort();
	}
	my $is_teaching_eval = ($eval) ? $eval->is_teaching_eval() : 0;
	my $eval_id = ($eval) ? $eval->primary_key() : 0;
	my $evaluatee_id = '';
	my $school = ($eval) ? $eval->school() : '';
	my $title = ($eval && $eval->out_label()) ? $eval->out_label() : __("Unknown Eval");
	my @evaluatees = ({label => __('All'), value => ''});
</%shared>

<%init>
	if ($is_teaching_eval) {
		$evaluatee_id = $ARGS{'evaluatee_id'};
		my $db = HSDB4::Constants::get_school_db($school);
		my $dbh = HSDB4::Constants::def_db_handle();
		my $sql = qq(
			SELECT u.user_id, u.firstname, u.lastname, COUNT(DISTINCT er.user_code)
			FROM $db.eval_response AS er
			JOIN tusk.eval_entry AS ee ON er.user_code = ee.evaluator_code
			JOIN hsdb4.user AS u ON ee.evaluatee_id = u.user_id
			WHERE er.eval_id = ?
			GROUP BY u.user_id
			ORDER BY u.lastname, u.firstname
		);
		my $sth = $dbh->prepare($sql);
		$sth->execute($eval_id);
		while (my ($user_id, $firstname, $lastname, $count) = $sth->fetchrow_array()) {
			push @evaluatees, {label => "$lastname, $firstname ($count)", value => $user_id};
		}
	}
	my $eval_results = HSDB45::Eval::Results->new($eval, $evaluatee_id);
	my $num_users = $eval->num_users();
	my $num_comps = $eval_results->total_user_codes() || 0;
	my $num_incos = $num_users - $num_comps;
	my $per_comps = ($num_users && $num_comps) ? sprintf("%.2f", 100*$num_comps/$num_users) : 0;
	my $per_incos = ($num_users && $num_incos) ? sprintf("%.2f", 100*$num_incos/$num_users) : 0;
</%init>

<span class="evalFluff" style="float:right; text-align:right;">
	<& /tmpl/element:link_to_help, 
		text => __('Statistics Definitions'),
		topic => 'evaluation_reports_-_statistics'
	 &>
	&nbsp;
	<& /tmpl/element:link_to_help, 
		text => __('Printing Help'),
		topic => 'evaluation_reports_-_printing_and_backgrounds'
	 &>
</span>
<h2 class="title"><% $title %></h2>
% if($ENV{HTTPS}) {
%	my $scriptURL = $ENV{SCRIPT_URL};
%	$scriptURL =~ s/^\///;
%	my $redirectURL = "http://" . $TUSK::Constants::Domain . "/" . $scriptURL;
%	if($redirectURL !~ /^http/) {$redirectURL = "http://$redirectURL";}
%#	$m->print("<center>I'm sorry, this page can not be successfully displayed over https at this time. Please <a href=\"". $redirectURL . "\">click here</a> to view this page.</center>");
%	$m->clear_buffer;
%	$m->redirect($redirectURL);
%	$m->about();
% }

% if ($is_teaching_eval) {
<h2 class="title"><& /tmpl/element:dropdown, params => { 
		label 		=> __('Evaluatee') . ':',
                name 		=> 'evaluatee',
                onchange	=> "window.location = '?evaluatee_id=' + this.options[this.selectedIndex].value",
                selected	=> $evaluatee_id,
                options		=> \@evaluatees
} &></h2>
% }

<div class="evalFluff">
	<a href="/protected/eval/administrator/show/<% $school %>"><%__("Manage Evaluations")%></a><br />
% unless ($is_teaching_eval) {
	<a href="/protected/eval/administrator/export/<% $school %>/<% $eval_id %>"><%__("Export Report")%></a><br />
% }
	<a id="graphLink" style="display:none;" href="" onclick="showHideGraphs(); return false;"><%__("Hide Graphs")%></a>

% my $evalLoadStats = TUSK::Eval::EvalLoadTime->new();
% $evalLoadStats->setEval($eval);
	<p class="timeMessage">
% if($evalLoadStats->totalLoads()) {
	<%__x("This eval has been requested {num} times with an average of {avg} sec and the longest time being {max} secs.", num => $evalLoadStats->totalLoads(), avg => sprintf('%.1f', $evalLoadStats->average()), max => sprintf('%.1f', $evalLoadStats->max()))%>
% } else {
	<%__x("This eval has been requested {num} times", num => $evalLoadStats->totalLoads())%>
%}
	<%__('You <span id="waitMessage">have been waiting</span> for <span id="timer">0</span> sec.')%>
	</p>
    <h3><% __('Enrollment Information') %></h3>
    <table border="1" cellspacing="0">
      <tr>
        <th><% __('Total Users') %></th>
        <th><% __('Complete Users') %></th>
% unless ($is_teaching_eval) {
        <th><% __('Incomplete Users') %></th>
% }
      </tr>
      <tr>
        <td align="center"><% $num_users %></td>
        <td align="center"><% $per_comps %>% (<% $num_comps %>)</td>
% unless ($is_teaching_eval) {
        <td align="center"><% $per_incos %>% (<% $num_incos %>)</td>
% }
      </tr>
    </table>    
</div>
<div id="graphicsLoadMessage" style="display:none;">
	<p id="queueMessage"><%__('Loading Eval Graphs')%></p><img src="/graphics/icons/waiting_bar.gif" alt="" />
</div>
<div id="evalArea">
</div>
% my $query = ($evaluatee_id) ? "?evaluatee_id=$evaluatee_id" : '';
<script type="text/javascript">loadEval('/tusk/ajax/evalBody<% $ENV{'PATH_INFO'} . $query %>', '<% $TUSK::Constants::SiteAbbr %>', '<% $school %>/<% $eval_id %>', 0);</script>
