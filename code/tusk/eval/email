<%doc>
 Copyright 2012 Tufts University

 Licensed under the Educational Community License, Version 1.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.opensource.org/licenses/ecl1.php

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
</%doc>
<%once>
	use HSDB4::SQLRow::User;
	use HSDB45::Eval::Secret;
	use TUSK::Constants;
	use TUSK::Application::Email;
	use TUSK::Application::HTML::Strip;
	use URI::Escape;
</%once>

<%attr>
	page_header => '/tmpl/prepend:manage_header_div_layout'
	page_footer => '/tmpl/footer:footer_div'
	skip_header_bar => 1
</%attr>

<%method title>
% return __("Email Links") . ": $title";
</%method>

<%method jsarray>
% return ['jquery/jquery.min.js'];
</%method>

<%method stylearray>
% return ['/style/style.css', '/style/eval.css', '/style/grapher.css'];
</%method>

<%shared>
	my $eval;
	if ($ENV{'PATH_INFO'} =~ /\/(.+)\/(.+)\/(.+)/) {
		$eval = HSDB45::Eval->new(_school => $1, _id => $2);
	} else {
		$eval = HSDB45::Eval->lookup_path($ENV{'PATH_INFO'});
	}
	my $is_teaching_eval = ($eval) ? $eval->is_teaching_eval() : 0;
	my $eval_id = ($eval) ? $eval->primary_key() : 0;
	my $course = ($eval) ? $eval->course() : '';
	my $school = ($eval) ? $eval->school() : '';
	my $title = ($eval && $eval->out_label()) ? $eval->out_label() : __("Unknown Eval");
	my @recipients = ();
	my @recipient_ids = ();
	my @teaching_sites = ();
	my @types = ({label => __('Evaluatees'), value => 0}, {label => __('Site Directors / Site Eval Admins'), value => 1});
	my %teaching_site_users = {};
</%shared>

<%init>
	my $recipient_id = $ARGS{'recipient_id'} || '';
	my $teaching_site_id = $ARGS{'teaching_site_id'} || 0;
	my $type = $ARGS{'type'} || 0;
	my $message = $ARGS{'message'} || '';

	# Check for a valid user
	my $user = $m->session->{'user'};
	my $user_id = (ref $user) ? $user->primary_key() : $user;
	my $is_eval_admin = $eval->admin_group()->contains_user($user_id);
	my $is_site_director = ($is_eval_admin) ? 0 : $eval->is_site_director($user_id, $teaching_site_id);
	unless ($is_eval_admin || $is_site_director) {
		my $url = $ENV{SCRIPT_NAME} . $ENV{PATH_INFO};
		$m->redirect("/home?url=$url");
	}

	if (ref $recipient_id eq 'ARRAY') {
		@recipient_ids = @$recipient_id;
	} elsif ($recipient_id) {
		push @recipient_ids, $recipient_id;
	}

	if ($is_site_director) {
		$type = 0;
	} else {
		push @teaching_sites, {label => __('All'), value => 0};
	}

	unless (scalar @recipient_ids) {
		foreach my $site ($course->child_teaching_sites('ORDER BY site_name')) {
			my $id = $site->primary_key();
			my $name = $site->site_name();
			my $location = $site->site_city_state();
			$location = "($location)" if ($location);
			if (!$is_site_director || $eval->is_site_director($user_id, $id)) {
				$teaching_site_id = $id if ($is_site_director && !$teaching_site_id);
				push @teaching_sites, {label => "$name $location", value => $id};
			}
		}
		$m->redirect("/home") unless (scalar @teaching_sites);

		if ($type) {
			my $time_period_id = $eval->field_value('time_period_id');
			my $conds = "role_token IN ('site_director', 'site_eval_admin')";
			$conds .= " AND course_user_site.teaching_site_id = $teaching_site_id" if ($teaching_site_id);
			my $users = $course->users($time_period_id, $conds);
			foreach (@$users) {
				push @recipients, {label => $_->outFullName(), value => $_->getPrimaryKeyID()};
			}
		} else {
			my $db = HSDB4::Constants::get_school_db($school);
			my $dbh = HSDB4::Constants::def_db_handle();
			my $op = ($teaching_site_id) ? '=' : '<>';
			my $sql = qq(
				SELECT u.user_id, u.firstname, u.lastname, COUNT(DISTINCT er.user_code)
				FROM $db.eval_response AS er
				JOIN tusk.eval_entry AS ee ON er.user_code = ee.evaluator_code
				JOIN hsdb4.user AS u ON ee.evaluatee_id = u.user_id
				WHERE er.eval_id = ? AND ee.teaching_site_id $op ?
				GROUP BY u.user_id
				ORDER BY u.lastname, u.firstname
			);
			my $sth = $dbh->prepare($sql);
			$sth->execute($eval_id, $teaching_site_id);
			while (my ($user_id, $firstname, $lastname, $count) = $sth->fetchrow_array()) {
				push @recipients, {label => "$lastname, $firstname ($count)", value => $user_id};
			}
		}
	}
</%init>

<h2 class="title"><% $title %></h2>

<div class="evalFluff">
	<a href="/protected/eval/administrator/show/<% $school %>"><% __('Manage Evaluations') %></a><br>
	<a id="report" href="/tusk/eval/report<% $ENV{'PATH_INFO'} %>"><% __('View Reports') %></a><br>

% unless (scalar @recipient_ids) {
	<h3><& /tmpl/element:dropdown, params => {
			label => __('Teaching Site') . ':',
			name => 'teaching_site',
			onchange => "setGetParameter('teaching_site_id', this.options[this.selectedIndex].value)",
			selected => $teaching_site_id,
			options => \@teaching_sites
	} &></h3>

	<h3><& /tmpl/element:dropdown, params => {
			label => __('Send To') . ':',
			name => 'type',
			onchange => "setGetParameter('type', this.options[this.selectedIndex].value)",
			selected => $type,
			options => \@types,
			disabled => $is_site_director
	} &></h3>

	<form method="post">
		<select id="recipients" style="float:left" name="recipient_id" multiple="multiple" size=12>
% foreach my $recipient (@recipients) {
			<option value="<% $recipient->{'value'} %>"><% $recipient->{'label'} %></option>
% }
		</select>
		<textarea name="message" class="textareawhite" style="margin-left:150px" cols=40 rows=10></textarea>
		<br><br>
		<input type="reset" class="formbutton" value="<% __('Reset') %>">
		<input type="button" class="formbutton" value="<% __('Select All') %>" onclick="$('#recipients option').prop('selected', true)">
		<input type="submit" class="boldformbutton" value="<% __('Send') %>">
	</form>
% }

<%perl>
	my $course_title = $course->title();
	my $time_period = $eval->time_period()->period();
	my $teaching_site = ($teaching_site_id) ? HSDB45::TeachingSite->new(_school => $school, _id => $teaching_site_id)->site_name() : '';
	my $from_addr = $user->default_email();
	my $subject = "'$title' " .__("Report") . " - $time_period";

	$message .= "\n\n" if ($message);

	if ($type) {
		$eval->set_published();
		$eval->save();
		$message .= __("Please click the link below to view evaluation reports on the course listed above:");
	} else {
		$message .= __("Please click the link below to view how you were evaluated on the course listed above:");
	}

	$message = TUSK::Application::HTML::Strip->new()->removeHTML($message);
	$message =~ s/\n/<br>/gi;

	foreach my $recipient_id (@recipient_ids) {
		my $recipient = HSDB4::SQLRow::User->new()->lookup_key($recipient_id);
		if ($recipient->primary_key()) {
			my $code = ($type) ? '' : uri_escape(HSDB45::Eval::Secret->generate_hashcode($school, $eval_id, $recipient_id));
			my $query = ($type) ? '' : "?auth=$code&evaluatee_id=$recipient_id&teaching_site_id=$teaching_site_id";
			my $link = 'https://' . $ENV{SERVER_NAME} . '/tusk/eval/report' . $ENV{PATH_INFO} . $query;
			my $full_name = $recipient->out_full_name();
			my $html_name = $recipient->out_html_full_name();
			my $to_addr = $recipient->default_email();
			my $body = "<html><body>";
			$body .= "<b>" . __("Evalutee Name") . "</b>: $full_name<br>" unless ($type);
			$body .= "<b>" . __("Course Name") . "</b>: $course_title<br>";
			$body .= "<b>" . __("Evaluation Title") . "</b>: $title<br>";
			$body .= "<b>" . __("Time Period") . "</b>: $time_period<br>";
			$body .= "<b>" . __("Teaching Site") . "</b>: $teaching_site<br>" if ($teaching_site);
			$body .= "<br>$message<br><br>";
			$body .= "<a href='$link'>$link</a>";
			$body .= "</body></html>";
			my $email = TUSK::Application::Email->new({
				to_addr => $to_addr,
				cc_addr => $from_addr,
				from_addr => $from_addr,
				subject => $subject,
				body => $body,
				'Content-Type' => 'text/html; charset="utf-8"'
			});
			if ($email->send()) {
				$m->print('<p>' . __('Sent email to') . " $html_name</p>");
			} else {
				my $error = $email->getError();
				$m->print('<p>' . __('Error sending email to') . " $html_name: $error</p>");
			}
		} else {
			$m->print('<p>' . __('Could not find user') . " $recipient_id</p>");
		}
	}
</%perl>
</div>
