###################################################################################################
## Upgrade instructions for Competency Linking:
###################################################################################################

######################
# Database:
######################
## Create a backup of existing data by dumping data from related tables; 

> mysqldump tusk competency > competency_backup.sql
> mysqldump tusk competency_type > competency_type_backup.sql
> mysqldump tusk competency_hierarchy > competency_hierarchy_backup.sql
> mysqldump tusk competency_course > competency_course_backup.sql
> mysqldump tusk enum_data > enum_data_backup.sql

## Run sql script to upgrade/create tables:

> mysql tusk < competency_tables.sql

#####################
## Data migration:
#####################

## Run the included perl script add_verions to add verisons to the competencies:

> perl add_version.pl

## Run the included perl script objectives_migration.pl to migrate data from the older class_meeting and content objectives
## to the competency table:

> perl objectives_migration.pl

## Note: This can take a few minutes depending on how many content and class_meeting objectives exist in the system.

## Note: you can comment out the respective function calls if you don't want to import either class_meeting objectives or content objecties
## Eg. #migrateContentObjectives(); in main to not import content objectives to competency table


