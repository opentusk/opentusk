#!/bin/perl
#
# Copyright 2012 Tufts University 
#
# Licensed under the Educational Community License, Version 1.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at 
#
# http://www.opensource.org/licenses/ecl1.php 
#
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions and 
# limitations under the License.


use strict;
use FindBin;
use lib "$FindBin::Bin/../lib";

use TUSK::Configuration::Password;
use TUSK::Constants;
use HSDB4::Constants;

my $missingEncryption = 0;

if($HSDB4::Constants::LDAP_PASSWORD && !TUSK::Configuration::Password::isEncrypted($HSDB4::Constants::LDAP_PASSWORD)) {
	reportNonEncrypted('HSDB4::Constants::LDAP_PASSWORD', $HSDB4::Constants::LDAP_PASSWORD);
}
foreach my $dbUser (keys %{$TUSK::Constants::DatabaseUsers}) {
	my %userHash = %{$TUSK::Constants::DatabaseUsers{$dbUser}};
	foreach my $property (keys %userHash) {
		if($property =~ /password/i) {
			my $password = $userHash{$property};
			if($password  && !TUSK::Configuration::Password::isEncrypted($password)) {
				reportNonEncrypted("TUSK::Constants::DatabaseUsers{$dbUser}{$property}", $password);
			}
		}
	}
}

if($missingEncryption) {
	print "We strongly recommend using bin/encrypt_password to generate an encrypted password for the above mentioned passwords.\n";
} else {
	print "All known passwords are encrypted.\n";
}

sub reportNonEncrypted {
	my $label = shift;
	my $password = shift;

	print "$label ($password) is not encrypted. Please set it to ". TUSK::Configuration::Password::encrypt($password) ."\n";
	$missingEncryption = 1;
}
