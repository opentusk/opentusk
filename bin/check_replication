#!/usr/bin/env perl
# Copyright 2012 Tufts University 
#
# Licensed under the Educational Community License, Version 1.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at 
#
# http://www.opensource.org/licenses/ecl1.php 
#
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions and 
# limitations under the License.


use strict;
use Getopt::Long;
use FindBin;
use lib "$FindBin::Bin/../lib";
use TUSK::Constants;

sub showHelp();

my $showHelp = 0;
my ($port, $socket);
GetOptions(
           "help!" => \$showHelp,
           "port=i" => \$port,
           "socket=s" => \$socket,
);

if($showHelp) {showHelp();}

my $mysqlCommand = $TUSK::Constants::MySQLDir . '/mysql';
$mysqlCommand .= ' --port=' . $port
	if ( defined  $port );
$mysqlCommand .= ' --socket=' . $socket
	if ( defined $socket );
$mysqlCommand .= ' --silent --batch --skip-column-names';

unless(open(INPUT, "$mysqlCommand -e \"show slave status \\G;\" | ")) {die "Unable to get slave status : $!\n";}
my $lastError = '';
my $secondsBehind = '';

while(<INPUT>) {
        chomp;
        if(/Last_Error: (.*)$/) {
                $lastError = $1;
                while(<INPUT>) {
                        if(/Skip_Counter/) {last;}
                        $lastError .= $_;
                }
                $lastError =~ s/  */ /g;
        }
        if(/Seconds_Behind_Master: (.*)$/) {$secondsBehind = $1;}
}
close(INPUT);

if(($secondsBehind eq 'NULL') || ($secondsBehind !~ /^\d+$/) || $lastError) {
        print "Replication is down!\n";
        print "Seconds behind master: $secondsBehind\n";
        print "Last Error:\n$lastError\n";
}


sub showHelp() {
        print "\n\n$0 - check mysql replication on a replicating slave\n";
        print "\t--help\tThis message\n";
        print "\t--port\tThe MySQL port to use\n";
        print "\t--socket\tThe MySQL socket to use\n";
        print "\n";
        print "This command is intended to be run as a cron for preventative maintenance\n";
        print "0,15,30,45 * * * * /usr/local/tusk/current/bin/$0 2>&1 | /usr/local/tusk/current/bin/mail_cron_error \"Mysql Replication Check\"\n";
        print "Runs this program every 15 minutes every day and mails the results based on the TUSK::Constants file\n";
        print "\n\n";
        exit();
}
