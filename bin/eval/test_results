#!/usr/bin/env perl -w
# Copyright 2012 Tufts University 
#
# Licensed under the Educational Community License, Version 1.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at 
#
# http://www.opensource.org/licenses/ecl1.php 
#
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions and 
# limitations under the License.



use strict;
use Test::Unit;
use HSDB4::test::setup;
use HSDB45::Eval;
use HSDB45::Eval::Results;
use XML::Twig;
use XML::Twig::Compare;

my ($eval, $rslts, $test_twig);
my ($eval_id, $school) = (2241, 'Medical');

sub set_up {
    $eval = HSDB45::Eval->new (_school => $school, _id => $eval_id);
    # $rslts = HSDB45::Eval::Results->new ($eval);
    $test_twig = XML::Twig->new;
    $test_twig->parsefile ('test.xml');
}

sub test_eval_results {
    assert (defined $rslts && ref $rslts && $rslts->isa ('HSDB45::Eval::Results'),
	    "Results object is very weird.");
    assert ($rslts->parent_eval == $eval, "Results object isn't set up right.");
}

sub not_test_get_xml_header {
    my $header_elt = $eval->results_header_elt;
    assert($header_elt, "Didn't get anything from HSDB45::Eval::results_header_elt().");
    my ($test_elt) = $test_twig->first_elt ('eval_header');
    assert (compare_elts ($header_elt, $test_elt), "Didn't get the right XML string as header");
}

sub not_test_responses {
    for my $question ($rslts->question_results) {
	my $responses = $question->responses ();
	warn sprintf ("For ID %d got %d responses.\n", $question->question->primary_key, $responses);
    }
}

sub not_test_xml {
    my $elt = $rslts->results_elt ();
    $elt->print ('nice');
}

create_suite ();
run_suite ();
# set_up ();
# test_eval_constructor ();

1;
__END__
