#!/usr/bin/env perl
# Copyright 2012 Tufts University 
#
# Licensed under the Educational Community License, Version 1.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at 
#
# http://www.opensource.org/licenses/ecl1.php 
#
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions and 
# limitations under the License.



use strict;

use FindBin;
use lib "$FindBin::Bin/../lib";
use TUSK::Core::ServerConfig;
use Getopt::Long;
use TUSK::UploadContent;
use HSDB4::SQLRow::Content;
use MySQL::Password;
use HSDB4::Constants;
HSDB4::Constants::set_user_pw (get_user_pw);
use TUSK::ProcessTracker::ProcessTracker;
use TUSK::Constants;

if (!defined($ENV{DATABASE_ADDRESS})){
	$ENV{DATABASE_ADDRESS} = TUSK::Core::ServerConfig::dbWriteHost;
}
die "Need to set ENV{DATABASE_ADDRESS}" if (!defined($ENV{DATABASE_ADDRESS}));

my $verbose=""; # set to 1 then info is printed to the screen
GetOptions ("verbose!" => \$verbose);

my $processed_dir = $TUSK::UploadContent::path{'doc-processed'};

opendir (DIR,$processed_dir) or &error("Cannot open $processed_dir: $!");
my @dir = readdir(DIR);
closedir (DIR);

foreach my $file (@dir){
	if ($file =~ /^(\d+)\.docx?\.xml$/) {
		my $content_id = $1;

		print "Processing: $file\n" if ($verbose);
		my $content = HSDB4::SQLRow::Content->new()->lookup_key($content_id);
		if ($content->primary_key()){
			open (my $fh, "<", $processed_dir . '/' . $file) or die ("Could not open $file: $!");
			my $hscml_body;
			while (my $line = <$fh>){
				$hscml_body .= $line;
			}
			close($fh);
		
			## crazy replace to make sure that &'s are transformed to entities in the web-cite tag
			$hscml_body =~ s/(<web-cite[^>]+uri=")([^\"]+)(")/$1 . &fix_uri($2) . $3/ge;

			# added fix for line return that is added to emph tags (inline style)
			$hscml_body =~s/(<\/?emph>)\r?\n/$1/g;

			$content->field_value('hscml_body', $hscml_body);
			$content->save_version("hscml body updated from $0");
			unlink $processed_dir . '/' . $file or die ("Could not clean up $file: $!");

			my $tracker = TUSK::ProcessTracker::ProcessTracker->getMostRecentTracker(undef, $content_id, 'tuskdoc');

			my $status = 'tuskdoc_completed';
			if ($hscml_body =~ /<conversion-note severity/) {
				$status .= '_warn';
			}

			$tracker->setStatus($status);
			my ($uid, $pw) = get_user_pw();
		
			$tracker->save({user => $uid});
		}
	}
	elsif ($file =~ /^(\d+)\.docx?\.err$/) {
		my $content_id = $1;

		open (my $fh, "<", $processed_dir . '/' . $file) or die ("Could not open $file: $!");
		my $err_txt;
		while (my $line = <$fh>){
			$err_txt .= $line;
		}
		close($fh);

		unlink $processed_dir . '/' . $file or die ("Could not clean up $file: $!");

		my $tracker = TUSK::ProcessTracker::ProcessTracker->getMostRecentTracker(undef, $content_id, 'tuskdoc');
		$tracker->setStatus('tuskdoc_error');
		my $upload_user = $tracker->getCreatedBy();
		my ($uid, $pw) = get_user_pw();
		
		$tracker->save({user => $uid});

		sendmail($err_txt, $content_id, $upload_user);
	}
	else{
		# error case
	}
}


## function to replace any &amp; or & with &amp; so XML parser is happy
sub fix_uri{
    my ($string) = @_;
    $string =~ s/\&amp;|\&/\&amp;/g;
    return $string;
}

sub sendmail {
	my ($msg, $cid, $userid) = @_;

	open(MAIL, "| /usr/lib/sendmail -t")or die "open: $!";
	print MAIL "From: TUSKdoc Process\n";
	print MAIL "To: $TUSK::Constants::ErrorEmail, $TUSK::Constants::SupportEmail\n";
	print MAIL "Subject: TUSKdoc Process Failure \n\n";
	print MAIL "TUSKdoc with id $cid (uploaded by $userid) failed to convert with the following error:\n";
	print MAIL $msg;
	print MAIL ".\n";
	close(MAIL);

}
