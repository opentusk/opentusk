#!/usr/bin/env perl
# Copyright 2012 Tufts University 
#
# Licensed under the Educational Community License, Version 1.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at 
#
# http://www.opensource.org/licenses/ecl1.php 
#
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions and 
# limitations under the License.


use FindBin;
use lib "$FindBin::Bin/../lib";

use strict;
use MySQL::Password;
use HSDB4::Constants;
use HSDB4::SQLRow::User;
use Getopt::Long;

my ($user_id, $lastname, $email);
GetOptions ("user-id:s" => \$user_id,
	    "lastname:s" => \$lastname,
	    "email:s" => \$email);

if (!$user_id && !$lastname) {
    print "usage: reset_pw --user-id=<user_id> [--lastname=<user last name>] [--email=<email address>]\n";
    exit;
}

HSDB4::Constants::set_user_pw (get_user_pw);

sub get_email {
    print "Enter the user's email address: ";
    my $email = <>;
    chomp $email;
    return $email;
}

my @user_ids = ();
my @emails = ();
if ($lastname and not $user_id) {
    my $cond = sprintf ("lastname like '%s%%'", substr($lastname, 0, 5));
    my @users = HSDB4::SQLRow::User->lookup_conditions ($cond);
    die "Could not find any matching users\n" unless @users;
    my $count = 0;
    foreach my $user (@users) {
	$count++;
	printf ("% 3d %10s   %s\n", $count, $user->primary_key, 
		$user->out_label);
	push @user_ids, $user->primary_key;
	push @emails, $user->field_value('email');
    }
    print "Choose a user (0 for no match): ";
    my $user_num = <>;
    $user_num--;
    die "No user found\n" unless $user_num >= 0 && $user_num <= $#users;
    unless ($emails[$user_num]) { $email = get_email }
    $user_id = $user_ids[$user_num];
}

if ($user_id) {
    my $r;
    my $msg;
    my $user = HSDB4::SQLRow::User->new->lookup_key ($user_id);
    die "Could not find a user \"$user_id\"\n" unless $user->primary_key;
    unless ($email or $user->field_value('email')) { $email = get_email }
    if ($email) { 
	$user->field_value('email', $email);
	$user->save;
    }
    ($r,$msg) = $user->admin_reset_password;
    print $msg."\n" if ($msg);
}








