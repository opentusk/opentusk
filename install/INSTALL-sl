OpenTUSK Installation Instructions for Scientific Linux 6.3

The following steps assume that you are in the OpenTUSK root directory.
(You should see an install subdirectory from the root.)

* Step 1: Enable OpenTUSK yum repository

  sudo cp install/opentusk.repo /etc/yum.repos.d/opentusk.repo

* Step 2: Install OpenTUSK required yum packages

  sudo install/scripts/install_yum_packages.bash

* Step 3: Create required operating system accounts

  sudo install/scripts/create_redhat_system_accounts.bash

* Step 4: Create required operating system directories

  sudo install/scripts/create_directories.sh

* Step 5: Create a self-signed SSL key

  sudo install/scripts/create_ssh_cert.bash

Answer questions about your identity for the certificate. If you don't
care, just hit enter until it stops asking.

* Step 6: Setup MySQL

Check to see if MySQL is running:

  /sbin/service mysqld status

If it's not running, start it:

  sudo /sbin/service mysqld start

Consider setting MySQL to run on startup:

  sudo /sbin/chkconfig mysqld on

If you haven't already configured MySQL, do so now:

  /usr/bin/mysql_secure_installation

Remember the MySQL database account root password you set here. You
will need it later.

Load TUSK databases and tables:

  mysql -u root -p < /usr/local/tusk/current/install/sql/tusk.sql

Set up database account for TUSK content manager (change
CONTENT_MANAGER_PASSWORD):

  mysql -u root -p <<END_SQL
    GRANT ALL ON *.* TO CONTENT_MANAGER@'localhost'
    IDENTIFIED BY 'CONTENT_MANAGER_PASSWORD';
  END_SQL

Set up TUSK application account `admin' (change <remember this
password>):

  mysql -u root -p <<END_SQL
    INSERT INTO hsdb4.user (user_id, source, status, password,
      lastname, firstname, affiliation, uid)
    VALUES ('admin', 'internal', 'Active',
      PASSWORD('<remember this password>'),
      'Trator', 'Adminis', 'default', 0);
    FLUSH PRIVILEGES;
  END_SQL

* Step 7: Configure TUSK

Copy template files:

  sudo cp /usr/local/tusk/current/install/templates/conf/tusk/tusk.conf /usr/local/tusk/conf/tusk.conf

At this point, edit tusk.conf with site-specific information. At
minimum, do the following find-replaces with your own information:

  sudo sed -i 's/CONTENT_MANAGER_USER/CONTENT_MANAGER/g' /usr/local/tusk/conf/tusk.conf
  sudo sed -i 's/CONTENT_MANAGER_PASSWORD/<from step 4.3>/g' /usr/local/tusk/conf/tusk.conf
  sudo sed -i 's/MYWEBMASTER/<your local admin email>/g' /usr/local/tusk/conf/tusk.conf
  sudo sed -i "s/MYFQDN/`hostname`/g" /usr/local/tusk/conf/tusk.conf
  sudo sed -i "s/TUSKFQDN/`hostname`/g" /usr/local/tusk/conf/tusk.conf

Consult /usr/local/tusk/current/install/templates/conf/tusk/tusk.conf.explain
for more information about tusk.conf.

Create the default school database:

  cd /usr/local/tusk/current/install && perl scripts/create_school.pl

* Step 8: Setup Apache

Copy template files:

  sudo cp /usr/local/tusk/current/install/templates/conf/apache2/tusk_* /etc/httpd/conf.d/

Comment out mime_magic:

  sudo sed -i 's/^LoadModule mime_magic_module/#LoadModule mime_magic_module/g' /etc/httpd/conf/httpd.conf

Remove the default https server:

  sudo cp /etc/httpd/conf.d/ssl.conf /tmp
  sudo sh -c "sed -n '/<VirtualHost _default_:443>/q;p' /tmp/ssl.conf > /etc/httpd/conf.d/ssl.conf"

Find-replace with your site information:

  sudo find /etc/httpd/conf.d/ -name "*.conf" -exec sed -i 's/MYWEBMASTER/<your local admin email>/g' {} \;
  sudo find /etc/httpd/conf.d/ -name "*.conf" -exec sed -i "s/MYFQDN/`hostname`/g" {} \;
  sudo find /etc/httpd/conf.d/ -name "*.conf" -exec sed -i "s/TUSKFQDN/`hostname`/g" {} \;

Check to see if Apache is running:

  sudo /sbin/service httpd status

If Apache is not running, start it:

  sudo /sbin/service httpd start

If Apache is running, reload the Apache configuration:

  sudo /sbin/service httpd reload

Consider setting Apache to run on startup:

  sudo /sbin/chkconfig httpd on

* Step 9: Fix permissions

Run scripts to create slide hierarchy and fix permissions:

  sudo perl /usr/local/tusk/current/install/scripts/make_slide_folders.pl &> /dev/null
  sudo /usr/local/tusk/current/install/scripts/create_directories.sh

* Step 10: Set SELinux to permissive

Until we fix OpenTUSK with proper policies to run under
security-enhanced Linux (SELinux), we have to set SELinux to run in
permissive mode:

  sudo sed -i 's/^\s*SELINUX=.*$/SELINUX=permissive/g' /etc/selinux/config

Reboot for changes to take effect:

  sudo reboot
  
* More information

Please see our public Wiki page for more information on OpenTUSK installation:

https://wikis.uit.tufts.edu/confluence/display/TUSKpub/TUSK+4.0+Install+Instructions+for+RHEL-CentOS
